architectury {
	common("fabric")
	platformSetupLoomIde()
	fabric()
}

configurations {
	common {
		canBeResolved = true
		canBeConsumed = false
	}
	compileClasspath.extendsFrom common
	runtimeClasspath.extendsFrom common
	developmentFabric.extendsFrom common

	// Files in this configuration will be bundled into your mod using the Shadow plugin.
	// Don't use the `shadow` configuration from the plugin itself as it's meant for excluding files.
	shadowBundle {
		canBeResolved = true
		canBeConsumed = false
	}
}

dependencies {
	modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"

	modCompileOnly "maven.modrinth:charm:${project.charm1_17_version}"

	common(project(path: ':common', configuration: 'namedElements')) { transitive false }
	shadowBundle project(path: ':common', configuration: 'transformProductionFabric')
}

publishing {
	publications {
		mavenCommon(MavenPublication) {
			artifactId = rootProject.archives_base_name
			from components.java
		}
	}
}
